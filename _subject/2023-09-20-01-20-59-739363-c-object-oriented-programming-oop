Class and object
Data encapsulation
Inheritance
Polymorphism
Abstraction
Object-oriented design principles
Object-oriented analysis and design (OOAD)
Virtual functions
Constructors and destructors
Operator overloading
Static members
Friend functions and classes
Object slicing
Multiple inheritance
Access specifiers
Pure virtual functions
Object lifetime
Composition
Encapsulation vs. abstraction
Reusability in OOP
Interface vs. implementation
Name hiding
Delegation
Smart pointers in OOP
Template classes
Method overloading
Method overriding
Object-oriented modeling
Object-oriented programming paradigms
SOLID principles in OOP
Composition vs. inheritance
Late binding
Early binding
Object-oriented databases
Message passing in OOP
Constructor chaining
Methods vs. functions in OOP
Namespace usage in OOP
Immutable objects
Operator precedence in OOP
Association in OOP
Aggregation in OOP
Dependency in OOP
Composition in OOP
Inheritance hierarchy
Multiple levels of inheritance
Object relationships in OOP
Abstract base classes
Concrete classes
Hybrid inheritance
Diamond problem in multiple inheritance
Object cloning
Reflection in OOP
Method hiding
The this pointer
Operator resolution in OOP
Serializing objects
Deserializing objects
OOP best practices
Exception handling in OOP
Interfaces in OOP
Typed vs. untyped languages in OOP
Class template specialization
Access control in OOP
Binding in OOP
Late binding vs. early binding
Dynamic dispatch
Object instantiation
Object-oriented programming languages
OOP design patterns
Adapter pattern
Factory method pattern
Observer pattern
Singleton pattern
Prototype pattern
Proxy pattern
Decorator pattern
Composite pattern
Strategy pattern
Builder pattern
Iterator pattern
State pattern
Command pattern
Facade pattern
Template method pattern
Visitor pattern
Mediator pattern
Flyweight pattern
Bridge pattern
Chain of responsibility pattern
Memento pattern
Namespace safety in OOP
Late static binding
OOP concepts compared to procedural programming
Benefits of OOP
Drawbacks of OOP
Object-oriented vs. functional programming
Garbage collection in OOP languages
OOP vs. structured programming
OOP in game development